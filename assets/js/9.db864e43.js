(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(a,t,r){"use strict";r.r(t);var e=r(14),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker-使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-使用"}},[a._v("#")]),a._v(" Docker 使用")]),a._v(" "),t("h2",{attrs:{id:"docker使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker使用"}},[a._v("#")]),a._v(" Docker使用")]),a._v(" "),t("h3",{attrs:{id:"docker允许简单的程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker允许简单的程序"}},[a._v("#")]),a._v(" Docker允许简单的程序")]),a._v(" "),t("p",[a._v("Docker 允许你在容器内运行应用程序， 使用 "),t("strong",[a._v("docker run")]),a._v(" 命令来在容器内运行一个应用程序。")]),a._v(" "),t("p",[a._v("输出Hello world")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('docker run ubuntu:15.10 /bin/echo "Hello world"\n')])])]),t("p",[t("img",{attrs:{src:"C:/Users/IT/AppData/Roaming/Typora/typora-user-images/image-20220914205549972.png",alt:"image-20220914205549972"}})]),a._v(" "),t("blockquote",[t("p",[a._v("各个参数解析：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("docker:")]),a._v(" Docker 的二进制执行文件。")]),a._v(" "),t("li",[t("strong",[a._v("run:")]),a._v(" 与前面的 docker 组合来运行一个容器。")]),a._v(" "),t("li",[t("strong",[a._v("ubuntu:15.10")]),a._v(" 指定要运行的镜像，Docker 首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。")]),a._v(" "),t("li",[t("strong",[a._v('/bin/echo "Hello world":')]),a._v(" 在启动的容器里执行的命令")])])]),a._v(" "),t("p",[a._v('以上命令完整的意思可以解释为：Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo "Hello world"，然后输出结果')]),a._v(" "),t("h3",{attrs:{id:"运行交互式的容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行交互式的容器"}},[a._v("#")]),a._v(" 运行交互式的容器")]),a._v(" "),t("p",[a._v('我们通过 docker 的两个参数 -i -t，让 docker 运行的容器实现**"对话"**的能力：')]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -i -t ubuntu:15.10 /bin/bash\n")])])]),t("p",[t("img",{attrs:{src:"C:/Users/IT/AppData/Roaming/Typora/typora-user-images/image-20220914205852656.png",alt:"image-20220914205852656"}})]),a._v(" "),t("p",[a._v("各个参数解析：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("-t:")]),a._v(" 在新容器内指定一个伪终端或终端。")]),a._v(" "),t("li",[t("strong",[a._v("-i:")]),a._v(" 允许你对容器内的标准输入 (STDIN) 进行交互。")])]),a._v(" "),t("p",[a._v("注意第二行 "),t("strong",[a._v("root@0123ce188bd8:/#")]),a._v("，此时我们已进入一个 ubuntu15.10 系统的容器")]),a._v(" "),t("p",[a._v("我们尝试在容器中运行命令 "),t("strong",[a._v("cat /proc/version")]),a._v("和"),t("strong",[a._v("ls")]),a._v("分别查看当前系统的版本信息和当前目录下的文件列表")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" cat /proc/version\n \n ls\n")])])]),t("p",[t("img",{attrs:{src:"C:/Users/IT/AppData/Roaming/Typora/typora-user-images/image-20220914210024727.png",alt:"image-20220914210024727"}})]),a._v(" "),t("p",[a._v("通过运行 exit 命令或者使用 CTRL+D 来退出容器")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("exit\n")])])]),t("h3",{attrs:{id:"启动容器-后台模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动容器-后台模式"}},[a._v("#")]),a._v(" 启动容器（后台模式）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('docker run -d ubuntu:15.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"\n')])])]),t("p",[t("img",{attrs:{src:"C:/Users/IT/AppData/Roaming/Typora/typora-user-images/image-20220914210246311.png",alt:"image-20220914210246311"}})]),a._v(" "),t("p",[a._v('在输出中，我们没有看到期望的 "hello world"，而是一串长字符')]),a._v(" "),t("p",[t("strong",[a._v("2b1b7a428627c51ab8810d541d759f072b4fc75487eed05812646b8534a2fe63")])]),a._v(" "),t("p",[a._v("这个长字符串叫做容器 ID，对每个容器来说都是唯一的，我们可以通过容器 ID 来查看对应的容器发生了什么。")]),a._v(" "),t("p",[a._v("首先，我们需要确认容器有在运行，可以通过 "),t("strong",[a._v("docker ps")]),a._v(" 来查看：")]),a._v(" "),t("p",[t("img",{attrs:{src:"C:/Users/IT/AppData/Roaming/Typora/typora-user-images/image-20220914210320950.png",alt:"image-20220914210320950"}})]),a._v(" "),t("p",[t("strong",[a._v("CONTAINER ID:")]),a._v(" 容器 ID。")]),a._v(" "),t("p",[t("strong",[a._v("IMAGE:")]),a._v(" 使用的镜像。")]),a._v(" "),t("p",[t("strong",[a._v("COMMAND:")]),a._v(" 启动容器时运行的命令。")]),a._v(" "),t("p",[t("strong",[a._v("CREATED:")]),a._v(" 容器的创建时间。")]),a._v(" "),t("p",[t("strong",[a._v("STATUS:")]),a._v(" 容器状态。")]),a._v(" "),t("p",[a._v("状态有7种：")]),a._v(" "),t("ul",[t("li",[a._v("created（已创建）")]),a._v(" "),t("li",[a._v("restarting（重启中）")]),a._v(" "),t("li",[a._v("running 或 Up（运行中）")]),a._v(" "),t("li",[a._v("removing（迁移中）")]),a._v(" "),t("li",[a._v("paused（暂停）")]),a._v(" "),t("li",[a._v("exited（停止）")]),a._v(" "),t("li",[a._v("dead（死亡）")])]),a._v(" "),t("p",[t("strong",[a._v("PORTS:")]),a._v(" 容器的端口信息和使用的连接类型（tcp\\udp）。")]),a._v(" "),t("p",[t("strong",[a._v("NAMES:")]),a._v(" 自动分配的容器名称。")]),a._v(" "),t("p",[a._v("在宿主主机内使用 "),t("strong",[a._v("docker logs")]),a._v(" 命令，查看容器内的标准输出：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker logs id\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" docker stop id//停止容器\n")])])]),t("p",[a._v("可以看到容器已经不在了。")]),a._v(" "),t("p",[a._v("也可以用下面的命令来停止: docker stop amazing_cori")])])}),[],!1,null,null,null);t.default=s.exports}}]);